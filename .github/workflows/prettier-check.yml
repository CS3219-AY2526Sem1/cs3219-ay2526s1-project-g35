name: Code Style Check

on:
  pull_request:
    branches: [master, main, develop]
  push:
    branches: [master, main, develop]

jobs:
  prettier-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service:
          - backend/user-service
          - backend/question-service
          - backend/collaboration-service
          - backend/matching-service
          - frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json
      
      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm ci
      
      - name: Install Prettier
        working-directory: ${{ matrix.service }}
        run: npm install --save-dev prettier
      
      - name: Check code formatting
        working-directory: ${{ matrix.service }}
        run: npm run format:check
      
      - name: Comment on PR (if check fails)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Prettier check failed for `${{ matrix.service }}`**\n\nPlease run `npm run format` in the service directory to fix formatting issues.'
            })

  prettier-check-summary:
    name: Prettier Check Summary
    runs-on: ubuntu-latest
    needs: prettier-check
    if: always()
    
    steps:
      - name: Check if all prettier checks passed
        run: |
          if [ "${{ needs.prettier-check.result }}" != "success" ]; then
            echo "❌ Some Prettier checks failed"
            exit 1
          else
            echo "✅ All Prettier checks passed"
          fi
