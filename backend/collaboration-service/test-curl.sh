#!/bin/bash

# Simple curl-based tests for Collaboration Service
# Make sure your services are running: docker-compose up -d

echo "üß™ Testing Collaboration Service Integration with curl"
echo "=================================================="

COLLAB_URL="http://localhost:8002"

# Test 1: Health check
echo "1Ô∏è‚É£ Testing health check..."
curl -s "${COLLAB_URL}/health" | jq '.' || echo "‚ùå Health check failed"
echo ""

# Test 2: Service health check
echo "2Ô∏è‚É£ Testing service health check..."
curl -s "${COLLAB_URL}/api/services/health" | jq '.' || echo "‚ö†Ô∏è Service health check failed (expected if other services not running)"
echo ""

# Test 3: Create matched session
echo "3Ô∏è‚É£ Testing matched session creation..."
SESSION_RESPONSE=$(curl -s -X POST "${COLLAB_URL}/api/sessions/matched" \
  -H "Content-Type: application/json" \
  -d '{
    "userIds": ["test-user-1", "test-user-2"],
    "questionId": "q-two-sum"
  }')

echo "Response:"
echo "$SESSION_RESPONSE" | jq '.' || echo "$SESSION_RESPONSE"

# Extract session ID if successful
SESSION_ID=$(echo "$SESSION_RESPONSE" | jq -r '.sessionId // empty')

if [ -n "$SESSION_ID" ]; then
  echo "‚úÖ Session created with ID: $SESSION_ID"
  echo ""

  # Test 4: Check pending sessions
  echo "4Ô∏è‚É£ Testing pending sessions..."
  curl -s "${COLLAB_URL}/api/sessions/pending" | jq '.' || echo "‚ùå Pending sessions check failed"
  echo ""

  # Test 5: Get session by user ID
  echo "5Ô∏è‚É£ Testing get session by user ID..."
  curl -s "${COLLAB_URL}/api/sessions/user/test-user-1" | jq '.' || echo "‚ùå Get user session failed"
  echo ""

  # Test 6: Get session details
  echo "6Ô∏è‚É£ Testing get session details..."
  curl -s "${COLLAB_URL}/api/sessions/${SESSION_ID}" | jq '.' || echo "‚ùå Get session details failed"
  echo ""

else
  echo "‚ùå Session creation failed"
fi

echo "üéâ curl tests completed!"
echo ""
echo "üìã To test WebSocket connections, use the Node.js test script:"
echo "   node test-integration.js"
